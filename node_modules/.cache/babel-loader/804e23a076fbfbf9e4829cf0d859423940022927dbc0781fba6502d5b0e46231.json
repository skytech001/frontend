{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\abiod\\\\Desktop\\\\frontend\\\\src\\\\screens\\\\OrderScreen.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link, useParams } from \"react-router-dom\";\nimport LoadingBox from \"../components/LoadingBox\";\nimport MessageBox from \"../components/MessageBox\";\nimport { orderDetails, resetdetailedOrders } from \"../features/orderSlice\";\nimport { orderPayment } from \"../features/paymentSlice\";\nimport { newOrderReset } from \"../features/placeOrderSlice\";\nimport { cartEmpty } from \"../features/addToCartSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OrderScreen = () => {\n  _s();\n  const dispatch = useDispatch();\n  const params = useParams();\n  const orderId = params.id;\n  const {\n    thisOrder\n  } = useSelector(state => state.order);\n  const {\n    userOrders\n  } = useSelector(state => state.orderList);\n  console.log(thisOrder);\n  // console.log(detailedOrder);\n\n  // useEffect(() => {\n  //   if (!detailedOrder && !paymentData) {\n  //     dispatch(orderDetails(orderId));\n  //   } else {\n  //   }\n  //   if (paymentData) {\n  //     // dispatch(resetdetailedOrders());\n  //     // dispatch(newOrderReset());\n  //     // dispatch(cartEmpty());\n  //   }\n  // }, [dispatch, paypalDispatch, paymentData, detailedOrder]);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 10\n  }, this);\n  //  detailLoading ? (\n  //   <LoadingBox></LoadingBox>\n  // ) : detailError ? (\n  //   <MessageBox variant=\"danger\"></MessageBox>\n  // ) : (\n  //   <div>\n  //     <h1>Order {detailedOrder._id}</h1>\n  //     <div className=\"row top\">\n  //       <div className=\"col-2\">\n  //         <ul>\n  //           <li>\n  //             <div className=\"card card-body\">\n  //               <h2>Shipping</h2>\n  //               <p>\n  //                 <strong>Name: </strong>{\" \"}\n  //                 {detailedOrder.shippingAddress.fullName\n  //                   ? detailedOrder.shippingAddress.fullName\n  //                   : paymentData.shippingAddress.fullName}{\" \"}\n  //                 <br />\n  //                 <strong>Address: </strong>\n  //                 {detailedOrder.shippingAddress.address},{\" \"}\n  //                 {detailedOrder.shippingAddress.city},{\" \"}\n  //                 {detailedOrder.shippingAddress.state},{\" \"}\n  //                 {detailedOrder.shippingAddress.postalCode},{\" \"}\n  //                 {detailedOrder.shippingAddress.country}\n  //               </p>\n  //               {paymentData.isDelivered ? (\n  //                 <MessageBox variant=\"success\">\n  //                   {detailedOrder.deliveredAt}\n  //                 </MessageBox>\n  //               ) : (\n  //                 <MessageBox variant=\"danger\">Not Deliverd</MessageBox>\n  //               )}\n  //             </div>\n  //           </li>\n\n  //           <li>\n  //             <div className=\"card card-body\">\n  //               <h2>Payment</h2>\n  //               <p>\n  //                 <strong>Method:</strong> {detailedOrder.paymentMethod}\n  //               </p>\n  //               {paymentData.isPaid ? (\n  //                 <MessageBox variant=\"success\">\n  //                   Paid at {paymentData.paidAt}\n  //                 </MessageBox>\n  //               ) : (\n  //                 <MessageBox variant=\"danger\">Not Paid</MessageBox>\n  //               )}\n  //             </div>\n  //           </li>\n\n  //           <li>\n  //             <div className=\"card card-body\">\n  //               <h2>Order Items</h2>\n  //               <ul>\n  //                 {detailedOrder.orderItems.map((item) => {\n  //                   return (\n  //                     <li key={item.product}>\n  //                       <div className=\"row\">\n  //                         <div>\n  //                           <img\n  //                             src={item.image}\n  //                             alt={item.name}\n  //                             className=\"small\"\n  //                           ></img>\n  //                         </div>\n  //                         <div className=\"min-30rem\">\n  //                           <Link to={`/product/${item.product}`}>\n  //                             {item.name}\n  //                           </Link>\n  //                         </div>\n\n  //                         <div>\n  //                           {item.qty} x ${item.price} = $\n  //                           {item.price * item.qty}\n  //                         </div>\n  //                       </div>\n  //                     </li>\n  //                   );\n  //                 })}\n  //               </ul>\n  //             </div>\n  //           </li>\n  //         </ul>\n  //       </div>\n\n  //       <div className=\"col-1\">\n  //         <div className=\"card card-body\">\n  //           <ul>\n  //             <li>\n  //               <h2>Order Summary</h2>\n  //             </li>\n  //             <li>\n  //               <div className=\"row\">\n  //                 <div>Items</div>\n  //                 <div>${detailedOrder.itemsPrice.toFixed(2)}</div>\n  //               </div>\n  //             </li>\n\n  //             <li>\n  //               <div className=\"row\">\n  //                 <div>Shipping</div>\n  //                 <div>${detailedOrder.shippingPrice.toFixed(2)}</div>\n  //               </div>\n  //             </li>\n\n  //             <li>\n  //               <div className=\"row\">\n  //                 <div>Tax</div>\n  //                 <div>${detailedOrder.taxPrice.toFixed(2)}</div>\n  //               </div>\n  //             </li>\n\n  //             <li>\n  //               <div className=\"row\">\n  //                 <div>\n  //                   <strong>Order Total</strong>\n  //                 </div>\n  //                 <div>\n  //                   <strong>${detailedOrder.totalPrice.toFixed(2)}</strong>\n  //                 </div>\n  //               </div>\n  //             </li>\n  //             <li>\n  //               {!paymentData.isPaid && (\n  //                 <div>\n  //                   {isPending ? (\n  //                     <LoadingBox />\n  //                   ) : (\n  //                     <div>\n  //                       <PayPalButtons\n  //                         createOrder={createOrder}\n  //                         onApprove={onApprove}\n  //                         onError={onError}\n  //                       ></PayPalButtons>\n  //                     </div>\n  //                   )}\n  //                   {paymentLoading && <LoadingBox></LoadingBox>}\n  //                 </div>\n  //               )}\n  //             </li>\n  //           </ul>\n  //         </div>\n  //       </div>\n  //     </div>\n  //   </div>\n  // );\n};\n_s(OrderScreen, \"ecNHkZRk/t1mTdRDKXgMALy0ZVM=\", false, function () {\n  return [useDispatch, useParams, useSelector, useSelector];\n});\n_c = OrderScreen;\nexport default OrderScreen;\nvar _c;\n$RefreshReg$(_c, \"OrderScreen\");","map":{"version":3,"names":["React","useEffect","useDispatch","useSelector","Link","useParams","LoadingBox","MessageBox","orderDetails","resetdetailedOrders","orderPayment","newOrderReset","cartEmpty","OrderScreen","dispatch","params","orderId","id","thisOrder","state","order","userOrders","orderList","console","log"],"sources":["C:/Users/abiod/Desktop/frontend/src/screens/OrderScreen.js"],"sourcesContent":["import React from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport LoadingBox from \"../components/LoadingBox\";\r\nimport MessageBox from \"../components/MessageBox\";\r\nimport { orderDetails, resetdetailedOrders } from \"../features/orderSlice\";\r\nimport { orderPayment } from \"../features/paymentSlice\";\r\nimport { newOrderReset } from \"../features/placeOrderSlice\";\r\nimport { cartEmpty } from \"../features/addToCartSlice\";\r\n\r\nconst OrderScreen = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const params = useParams();\r\n  const orderId = params.id;\r\n  const { thisOrder } = useSelector((state) => state.order);\r\n  const { userOrders } = useSelector((state) => state.orderList);\r\n  console.log(thisOrder);\r\n  // console.log(detailedOrder);\r\n\r\n  // useEffect(() => {\r\n  //   if (!detailedOrder && !paymentData) {\r\n  //     dispatch(orderDetails(orderId));\r\n  //   } else {\r\n  //   }\r\n  //   if (paymentData) {\r\n  //     // dispatch(resetdetailedOrders());\r\n  //     // dispatch(newOrderReset());\r\n  //     // dispatch(cartEmpty());\r\n  //   }\r\n  // }, [dispatch, paypalDispatch, paymentData, detailedOrder]);\r\n\r\n  return <div></div>;\r\n  //  detailLoading ? (\r\n  //   <LoadingBox></LoadingBox>\r\n  // ) : detailError ? (\r\n  //   <MessageBox variant=\"danger\"></MessageBox>\r\n  // ) : (\r\n  //   <div>\r\n  //     <h1>Order {detailedOrder._id}</h1>\r\n  //     <div className=\"row top\">\r\n  //       <div className=\"col-2\">\r\n  //         <ul>\r\n  //           <li>\r\n  //             <div className=\"card card-body\">\r\n  //               <h2>Shipping</h2>\r\n  //               <p>\r\n  //                 <strong>Name: </strong>{\" \"}\r\n  //                 {detailedOrder.shippingAddress.fullName\r\n  //                   ? detailedOrder.shippingAddress.fullName\r\n  //                   : paymentData.shippingAddress.fullName}{\" \"}\r\n  //                 <br />\r\n  //                 <strong>Address: </strong>\r\n  //                 {detailedOrder.shippingAddress.address},{\" \"}\r\n  //                 {detailedOrder.shippingAddress.city},{\" \"}\r\n  //                 {detailedOrder.shippingAddress.state},{\" \"}\r\n  //                 {detailedOrder.shippingAddress.postalCode},{\" \"}\r\n  //                 {detailedOrder.shippingAddress.country}\r\n  //               </p>\r\n  //               {paymentData.isDelivered ? (\r\n  //                 <MessageBox variant=\"success\">\r\n  //                   {detailedOrder.deliveredAt}\r\n  //                 </MessageBox>\r\n  //               ) : (\r\n  //                 <MessageBox variant=\"danger\">Not Deliverd</MessageBox>\r\n  //               )}\r\n  //             </div>\r\n  //           </li>\r\n\r\n  //           <li>\r\n  //             <div className=\"card card-body\">\r\n  //               <h2>Payment</h2>\r\n  //               <p>\r\n  //                 <strong>Method:</strong> {detailedOrder.paymentMethod}\r\n  //               </p>\r\n  //               {paymentData.isPaid ? (\r\n  //                 <MessageBox variant=\"success\">\r\n  //                   Paid at {paymentData.paidAt}\r\n  //                 </MessageBox>\r\n  //               ) : (\r\n  //                 <MessageBox variant=\"danger\">Not Paid</MessageBox>\r\n  //               )}\r\n  //             </div>\r\n  //           </li>\r\n\r\n  //           <li>\r\n  //             <div className=\"card card-body\">\r\n  //               <h2>Order Items</h2>\r\n  //               <ul>\r\n  //                 {detailedOrder.orderItems.map((item) => {\r\n  //                   return (\r\n  //                     <li key={item.product}>\r\n  //                       <div className=\"row\">\r\n  //                         <div>\r\n  //                           <img\r\n  //                             src={item.image}\r\n  //                             alt={item.name}\r\n  //                             className=\"small\"\r\n  //                           ></img>\r\n  //                         </div>\r\n  //                         <div className=\"min-30rem\">\r\n  //                           <Link to={`/product/${item.product}`}>\r\n  //                             {item.name}\r\n  //                           </Link>\r\n  //                         </div>\r\n\r\n  //                         <div>\r\n  //                           {item.qty} x ${item.price} = $\r\n  //                           {item.price * item.qty}\r\n  //                         </div>\r\n  //                       </div>\r\n  //                     </li>\r\n  //                   );\r\n  //                 })}\r\n  //               </ul>\r\n  //             </div>\r\n  //           </li>\r\n  //         </ul>\r\n  //       </div>\r\n\r\n  //       <div className=\"col-1\">\r\n  //         <div className=\"card card-body\">\r\n  //           <ul>\r\n  //             <li>\r\n  //               <h2>Order Summary</h2>\r\n  //             </li>\r\n  //             <li>\r\n  //               <div className=\"row\">\r\n  //                 <div>Items</div>\r\n  //                 <div>${detailedOrder.itemsPrice.toFixed(2)}</div>\r\n  //               </div>\r\n  //             </li>\r\n\r\n  //             <li>\r\n  //               <div className=\"row\">\r\n  //                 <div>Shipping</div>\r\n  //                 <div>${detailedOrder.shippingPrice.toFixed(2)}</div>\r\n  //               </div>\r\n  //             </li>\r\n\r\n  //             <li>\r\n  //               <div className=\"row\">\r\n  //                 <div>Tax</div>\r\n  //                 <div>${detailedOrder.taxPrice.toFixed(2)}</div>\r\n  //               </div>\r\n  //             </li>\r\n\r\n  //             <li>\r\n  //               <div className=\"row\">\r\n  //                 <div>\r\n  //                   <strong>Order Total</strong>\r\n  //                 </div>\r\n  //                 <div>\r\n  //                   <strong>${detailedOrder.totalPrice.toFixed(2)}</strong>\r\n  //                 </div>\r\n  //               </div>\r\n  //             </li>\r\n  //             <li>\r\n  //               {!paymentData.isPaid && (\r\n  //                 <div>\r\n  //                   {isPending ? (\r\n  //                     <LoadingBox />\r\n  //                   ) : (\r\n  //                     <div>\r\n  //                       <PayPalButtons\r\n  //                         createOrder={createOrder}\r\n  //                         onApprove={onApprove}\r\n  //                         onError={onError}\r\n  //                       ></PayPalButtons>\r\n  //                     </div>\r\n  //                   )}\r\n  //                   {paymentLoading && <LoadingBox></LoadingBox>}\r\n  //                 </div>\r\n  //               )}\r\n  //             </li>\r\n  //           </ul>\r\n  //         </div>\r\n  //       </div>\r\n  //     </div>\r\n  //   </div>\r\n  // );\r\n};\r\n\r\nexport default OrderScreen;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,OAAO;AACjC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,IAAI,EAAEC,SAAS,QAAQ,kBAAkB;AAClD,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,UAAU,MAAM,0BAA0B;AACjD,SAASC,YAAY,EAAEC,mBAAmB,QAAQ,wBAAwB;AAC1E,SAASC,YAAY,QAAQ,0BAA0B;AACvD,SAASC,aAAa,QAAQ,6BAA6B;AAC3D,SAASC,SAAS,QAAQ,4BAA4B;AAAC;AAEvD,MAAMC,WAAW,GAAG,MAAM;EAAA;EACxB,MAAMC,QAAQ,GAAGZ,WAAW,EAAE;EAE9B,MAAMa,MAAM,GAAGV,SAAS,EAAE;EAC1B,MAAMW,OAAO,GAAGD,MAAM,CAACE,EAAE;EACzB,MAAM;IAAEC;EAAU,CAAC,GAAGf,WAAW,CAAEgB,KAAK,IAAKA,KAAK,CAACC,KAAK,CAAC;EACzD,MAAM;IAAEC;EAAW,CAAC,GAAGlB,WAAW,CAAEgB,KAAK,IAAKA,KAAK,CAACG,SAAS,CAAC;EAC9DC,OAAO,CAACC,GAAG,CAACN,SAAS,CAAC;EACtB;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBAAO;IAAA;IAAA;IAAA;EAAA,QAAW;EAClbG,SAAS,EAEFF,WAAW,EACVA,WAAW;AAAA;AAAA,KAN9BU,WAAW;AA6KjB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}