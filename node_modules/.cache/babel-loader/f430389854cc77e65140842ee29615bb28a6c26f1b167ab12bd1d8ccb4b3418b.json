{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { json } from \"react-router-dom\";\nconst initialState = {\n  productList: [],\n  isLoading: false,\n  error: false,\n  clickedProduct: {},\n  clickedLoading: false,\n  clickedError: false\n};\nexport const getProductList = createAsyncThunk(\"product/getProductList\", () => {\n  return fetch(\"http://localhost:5000/products\").then(response => response.json());\n});\nexport const getClickedProduct = createAsyncThunk(\"product/getClickedProduct\", id => {\n  console.log();\n  return fetch(\"http://localhost:5000/products\", {\n    method: \"get\",\n    headers: {\n      \"Content-type\": \"application/json\"\n    },\n    body: json.stringify(id)\n  })\n  //   .then((response) => response.json())\n  .then(console.log);\n});\nconst productSlice = createSlice({\n  name: \"products\",\n  initialState,\n  //   reducers: {\n  //     productLists: (state) => {},\n  //   },\n  extraReducers: {\n    [getProductList.pending]: state => {\n      state.isLoading = true;\n    },\n    [getProductList.fulfilled]: (state, action) => {\n      state.isLoading = false;\n      state.productList = action.payload;\n    },\n    [getProductList.rejected]: state => {\n      state.isLoading = false;\n      state.error = true;\n    },\n    [getClickedProduct.pending]: state => {\n      state.clickedLoading = true;\n    },\n    [getClickedProduct.fulfilled]: (state, action) => {\n      state.clickedLoading = false;\n      state.productDetail = action.payload;\n    },\n    [getClickedProduct.rejected]: state => {\n      state.clickedLoading = false;\n      state.clickedError = true;\n    }\n  }\n});\nexport default productSlice.reducer;\n// export const { productLists } = productSlice.actions;","map":{"version":3,"names":["createSlice","createAsyncThunk","json","initialState","productList","isLoading","error","clickedProduct","clickedLoading","clickedError","getProductList","fetch","then","response","getClickedProduct","id","console","log","method","headers","body","stringify","productSlice","name","extraReducers","pending","state","fulfilled","action","payload","rejected","productDetail","reducer"],"sources":["C:/Users/abiod/Desktop/frontend/src/features/productSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport { json } from \"react-router-dom\";\r\n\r\nconst initialState = {\r\n  productList: [],\r\n  isLoading: false,\r\n  error: false,\r\n  clickedProduct: {},\r\n  clickedLoading: false,\r\n  clickedError: false,\r\n};\r\n\r\nexport const getProductList = createAsyncThunk(\"product/getProductList\", () => {\r\n  return fetch(\"http://localhost:5000/products\").then((response) =>\r\n    response.json()\r\n  );\r\n});\r\n\r\nexport const getClickedProduct = createAsyncThunk(\r\n  \"product/getClickedProduct\",\r\n  (id) => {\r\n    console.log();\r\n    return (\r\n      fetch(\"http://localhost:5000/products\", {\r\n        method: \"get\",\r\n        headers: { \"Content-type\": \"application/json\" },\r\n        body: json.stringify(id),\r\n      })\r\n        //   .then((response) => response.json())\r\n        .then(console.log)\r\n    );\r\n  }\r\n);\r\n\r\nconst productSlice = createSlice({\r\n  name: \"products\",\r\n  initialState,\r\n  //   reducers: {\r\n  //     productLists: (state) => {},\r\n  //   },\r\n  extraReducers: {\r\n    [getProductList.pending]: (state) => {\r\n      state.isLoading = true;\r\n    },\r\n    [getProductList.fulfilled]: (state, action) => {\r\n      state.isLoading = false;\r\n      state.productList = action.payload;\r\n    },\r\n    [getProductList.rejected]: (state) => {\r\n      state.isLoading = false;\r\n      state.error = true;\r\n    },\r\n\r\n    [getClickedProduct.pending]: (state) => {\r\n      state.clickedLoading = true;\r\n    },\r\n    [getClickedProduct.fulfilled]: (state, action) => {\r\n      state.clickedLoading = false;\r\n      state.productDetail = action.payload;\r\n    },\r\n    [getClickedProduct.rejected]: (state) => {\r\n      state.clickedLoading = false;\r\n      state.clickedError = true;\r\n    },\r\n  },\r\n});\r\n\r\nexport default productSlice.reducer;\r\n// export const { productLists } = productSlice.actions;\r\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,SAASC,IAAI,QAAQ,kBAAkB;AAEvC,MAAMC,YAAY,GAAG;EACnBC,WAAW,EAAE,EAAE;EACfC,SAAS,EAAE,KAAK;EAChBC,KAAK,EAAE,KAAK;EACZC,cAAc,EAAE,CAAC,CAAC;EAClBC,cAAc,EAAE,KAAK;EACrBC,YAAY,EAAE;AAChB,CAAC;AAED,OAAO,MAAMC,cAAc,GAAGT,gBAAgB,CAAC,wBAAwB,EAAE,MAAM;EAC7E,OAAOU,KAAK,CAAC,gCAAgC,CAAC,CAACC,IAAI,CAAEC,QAAQ,IAC3DA,QAAQ,CAACX,IAAI,EAAE,CAChB;AACH,CAAC,CAAC;AAEF,OAAO,MAAMY,iBAAiB,GAAGb,gBAAgB,CAC/C,2BAA2B,EAC1Bc,EAAE,IAAK;EACNC,OAAO,CAACC,GAAG,EAAE;EACb,OACEN,KAAK,CAAC,gCAAgC,EAAE;IACtCO,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAElB,IAAI,CAACmB,SAAS,CAACN,EAAE;EACzB,CAAC;EACC;EAAA,CACCH,IAAI,CAACI,OAAO,CAACC,GAAG,CAAC;AAExB,CAAC,CACF;AAED,MAAMK,YAAY,GAAGtB,WAAW,CAAC;EAC/BuB,IAAI,EAAE,UAAU;EAChBpB,YAAY;EACZ;EACA;EACA;EACAqB,aAAa,EAAE;IACb,CAACd,cAAc,CAACe,OAAO,GAAIC,KAAK,IAAK;MACnCA,KAAK,CAACrB,SAAS,GAAG,IAAI;IACxB,CAAC;IACD,CAACK,cAAc,CAACiB,SAAS,GAAG,CAACD,KAAK,EAAEE,MAAM,KAAK;MAC7CF,KAAK,CAACrB,SAAS,GAAG,KAAK;MACvBqB,KAAK,CAACtB,WAAW,GAAGwB,MAAM,CAACC,OAAO;IACpC,CAAC;IACD,CAACnB,cAAc,CAACoB,QAAQ,GAAIJ,KAAK,IAAK;MACpCA,KAAK,CAACrB,SAAS,GAAG,KAAK;MACvBqB,KAAK,CAACpB,KAAK,GAAG,IAAI;IACpB,CAAC;IAED,CAACQ,iBAAiB,CAACW,OAAO,GAAIC,KAAK,IAAK;MACtCA,KAAK,CAAClB,cAAc,GAAG,IAAI;IAC7B,CAAC;IACD,CAACM,iBAAiB,CAACa,SAAS,GAAG,CAACD,KAAK,EAAEE,MAAM,KAAK;MAChDF,KAAK,CAAClB,cAAc,GAAG,KAAK;MAC5BkB,KAAK,CAACK,aAAa,GAAGH,MAAM,CAACC,OAAO;IACtC,CAAC;IACD,CAACf,iBAAiB,CAACgB,QAAQ,GAAIJ,KAAK,IAAK;MACvCA,KAAK,CAAClB,cAAc,GAAG,KAAK;MAC5BkB,KAAK,CAACjB,YAAY,GAAG,IAAI;IAC3B;EACF;AACF,CAAC,CAAC;AAEF,eAAea,YAAY,CAACU,OAAO;AACnC"},"metadata":{},"sourceType":"module","externalDependencies":[]}