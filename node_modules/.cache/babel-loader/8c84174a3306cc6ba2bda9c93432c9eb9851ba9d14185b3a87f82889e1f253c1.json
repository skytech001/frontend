{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nconst initialState = {\n  clickedProd: [],\n  loadingClicked: false,\n  clickedError: false\n};\nexport const getClickedProduct = createAsyncThunk(\"clickedProductdetail/getClickedProduct\", data => {\n  return fetch(\"http://localhost:5000/products/:id\", {\n    method: \"post\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      data\n    })\n  }).then(response => response.json()).then(console.log);\n});\nconst clickedProductSlice = createSlice({\n  name: \"clickedProductdetail\",\n  initialState,\n  extraReducer: {\n    [getClickedProduct.pending]: state => {\n      return state.loadingClicked = true;\n    },\n    [getClickedProduct.fulfilled]: (state, action) => {\n      return state.loadingClicked = false;\n      state.clickedProd = action.payload;\n    },\n    [getClickedProduct.rejected]: state => {\n      return state.loadingClicked = false;\n      returstate.clickedError = true;\n    }\n  }\n});\nexport default clickedProductSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","initialState","clickedProd","loadingClicked","clickedError","getClickedProduct","data","fetch","method","headers","body","JSON","stringify","then","response","json","console","log","clickedProductSlice","name","extraReducer","pending","state","fulfilled","action","payload","rejected","returstate","reducer"],"sources":["C:/Users/abiod/Desktop/frontend/src/features/clickedProductSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n  clickedProd: [],\r\n  loadingClicked: false,\r\n  clickedError: false,\r\n};\r\n\r\nexport const getClickedProduct = createAsyncThunk(\r\n  \"clickedProductdetail/getClickedProduct\",\r\n  (data) => {\r\n    return fetch(\"http://localhost:5000/products/:id\", {\r\n      method: \"post\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ data }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then(console.log);\r\n  }\r\n);\r\n\r\nconst clickedProductSlice = createSlice({\r\n  name: \"clickedProductdetail\",\r\n  initialState,\r\n\r\n  extraReducer: {\r\n    [getClickedProduct.pending]: (state) => {\r\n      return (state.loadingClicked = true);\r\n    },\r\n    [getClickedProduct.fulfilled]: (state, action) => {\r\n      return (state.loadingClicked = false);\r\n      state.clickedProd = action.payload;\r\n    },\r\n    [getClickedProduct.rejected]: (state) => {\r\n      return (state.loadingClicked = false);\r\n      returstate.clickedError = true;\r\n    },\r\n  },\r\n});\r\n\r\nexport default clickedProductSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAEhE,MAAMC,YAAY,GAAG;EACnBC,WAAW,EAAE,EAAE;EACfC,cAAc,EAAE,KAAK;EACrBC,YAAY,EAAE;AAChB,CAAC;AAED,OAAO,MAAMC,iBAAiB,GAAGL,gBAAgB,CAC/C,wCAAwC,EACvCM,IAAI,IAAK;EACR,OAAOC,KAAK,CAAC,oCAAoC,EAAE;IACjDC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEN;IAAK,CAAC;EAC/B,CAAC,CAAC,CACCO,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACnCF,IAAI,CAACG,OAAO,CAACC,GAAG,CAAC;AACtB,CAAC,CACF;AAED,MAAMC,mBAAmB,GAAGnB,WAAW,CAAC;EACtCoB,IAAI,EAAE,sBAAsB;EAC5BlB,YAAY;EAEZmB,YAAY,EAAE;IACZ,CAACf,iBAAiB,CAACgB,OAAO,GAAIC,KAAK,IAAK;MACtC,OAAQA,KAAK,CAACnB,cAAc,GAAG,IAAI;IACrC,CAAC;IACD,CAACE,iBAAiB,CAACkB,SAAS,GAAG,CAACD,KAAK,EAAEE,MAAM,KAAK;MAChD,OAAQF,KAAK,CAACnB,cAAc,GAAG,KAAK;MACpCmB,KAAK,CAACpB,WAAW,GAAGsB,MAAM,CAACC,OAAO;IACpC,CAAC;IACD,CAACpB,iBAAiB,CAACqB,QAAQ,GAAIJ,KAAK,IAAK;MACvC,OAAQA,KAAK,CAACnB,cAAc,GAAG,KAAK;MACpCwB,UAAU,CAACvB,YAAY,GAAG,IAAI;IAChC;EACF;AACF,CAAC,CAAC;AAEF,eAAec,mBAAmB,CAACU,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}