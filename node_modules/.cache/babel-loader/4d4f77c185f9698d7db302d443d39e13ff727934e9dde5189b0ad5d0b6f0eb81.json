{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nconst initialState = {\n  productList: [],\n  isLoading: false,\n  error: false\n};\nexport const getProductList = createAsyncThunk(\"product/getProductList\", () => {\n  return fetch(\"http://localhost:5000/products\").then(response => response.json()).then(data => data);\n});\nconst productSlice = createSlice({\n  name: \"products\",\n  initialState,\n  reducers: {\n    productList: state => {}\n  },\n  extraReducers: {\n    [getProductList.pending]: state => {\n      state.isLoading = true;\n    },\n    [getProductList.fulfilled]: (state, action) => {\n      console.log(action);\n      state.isLoading = false;\n      state.productList = action.payload;\n    },\n    [getProductList.rejected]: state => {\n      state.isLoading = false;\n      state.error = true;\n    }\n  }\n});\nexport default productSlice.reducer;\nexport const {\n  productList\n} = productSlice.actions;","map":{"version":3,"names":["createSlice","createAsyncThunk","initialState","productList","isLoading","error","getProductList","fetch","then","response","json","data","productSlice","name","reducers","state","extraReducers","pending","fulfilled","action","console","log","payload","rejected","reducer","actions"],"sources":["C:/Users/abiod/Desktop/frontend/src/features/productSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n  productList: [],\r\n  isLoading: false,\r\n  error: false,\r\n};\r\n\r\nexport const getProductList = createAsyncThunk(\"product/getProductList\", () => {\r\n  return fetch(\"http://localhost:5000/products\")\r\n    .then((response) => response.json())\r\n    .then((data) => data);\r\n});\r\n\r\nconst productSlice = createSlice({\r\n  name: \"products\",\r\n  initialState,\r\n  reducers: {\r\n    productList: (state) => {},\r\n  },\r\n  extraReducers: {\r\n    [getProductList.pending]: (state) => {\r\n      state.isLoading = true;\r\n    },\r\n    [getProductList.fulfilled]: (state, action) => {\r\n      console.log(action);\r\n      state.isLoading = false;\r\n      state.productList = action.payload;\r\n    },\r\n    [getProductList.rejected]: (state) => {\r\n      state.isLoading = false;\r\n      state.error = true;\r\n    },\r\n  },\r\n});\r\n\r\nexport default productSlice.reducer;\r\nexport const { productList } = productSlice.actions;\r\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAEhE,MAAMC,YAAY,GAAG;EACnBC,WAAW,EAAE,EAAE;EACfC,SAAS,EAAE,KAAK;EAChBC,KAAK,EAAE;AACT,CAAC;AAED,OAAO,MAAMC,cAAc,GAAGL,gBAAgB,CAAC,wBAAwB,EAAE,MAAM;EAC7E,OAAOM,KAAK,CAAC,gCAAgC,CAAC,CAC3CC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAKA,IAAI,CAAC;AACzB,CAAC,CAAC;AAEF,MAAMC,YAAY,GAAGZ,WAAW,CAAC;EAC/Ba,IAAI,EAAE,UAAU;EAChBX,YAAY;EACZY,QAAQ,EAAE;IACRX,WAAW,EAAGY,KAAK,IAAK,CAAC;EAC3B,CAAC;EACDC,aAAa,EAAE;IACb,CAACV,cAAc,CAACW,OAAO,GAAIF,KAAK,IAAK;MACnCA,KAAK,CAACX,SAAS,GAAG,IAAI;IACxB,CAAC;IACD,CAACE,cAAc,CAACY,SAAS,GAAG,CAACH,KAAK,EAAEI,MAAM,KAAK;MAC7CC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;MACnBJ,KAAK,CAACX,SAAS,GAAG,KAAK;MACvBW,KAAK,CAACZ,WAAW,GAAGgB,MAAM,CAACG,OAAO;IACpC,CAAC;IACD,CAAChB,cAAc,CAACiB,QAAQ,GAAIR,KAAK,IAAK;MACpCA,KAAK,CAACX,SAAS,GAAG,KAAK;MACvBW,KAAK,CAACV,KAAK,GAAG,IAAI;IACpB;EACF;AACF,CAAC,CAAC;AAEF,eAAeO,YAAY,CAACY,OAAO;AACnC,OAAO,MAAM;EAAErB;AAAY,CAAC,GAAGS,YAAY,CAACa,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}