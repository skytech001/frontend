{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\abiod\\\\Desktop\\\\frontend\\\\src\\\\screens\\\\ProfileScreen.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport LoadingBox from \"../components/LoadingBox\";\nimport MessageBox from \"../components/MessageBox\";\n// import { profileReset, updateUserProfile } from \"../features/profileSlice\";\nimport { userSignIn, updateUserProfile } from \"../features/signinSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ProfileScreen = () => {\n  _s();\n  const [name, setName] = useState(\"\");\n  const [email, setEail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmpassword, setConfirmpassword] = useState(\"\");\n  const {\n    userInfo,\n    updateLoading,\n    updateSuccess,\n    updateError\n  } = useSelector(state => state.signin);\n  console.log(updateSuccess);\n  const dispatch = useDispatch();\n  // console.log(updatedProfile);\n  useEffect(() => {\n    setName(userInfo.name);\n    setEail(userInfo.email);\n    // if (success) {\n    //   dispatch(\n    //     userSignIn({\n    //       email: updatedProfile.email,\n    //       password: updatedProfile.password,\n    //     })\n    //   );\n    // dispatch(profileReset());\n    // }\n  }, [dispatch, userInfo, updateSuccess]);\n\n  //  dispatch(userSignIn())\n\n  const submitHandler = event => {\n    event.preventDefault();\n    if (password !== confirmpassword) {\n      alert(\"Password and Confirmed Password does not match\");\n    } else {\n      dispatch(updateUserProfile({\n        id: userInfo.id,\n        name,\n        email,\n        password\n      }));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"User Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), updateLoading ? /*#__PURE__*/_jsxDEV(LoadingBox, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this) : updateError ? /*#__PURE__*/_jsxDEV(MessageBox, {\n        variant: \"danger\",\n        children: updateError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [updateSuccess && /*#__PURE__*/_jsxDEV(MessageBox, {\n          variant: \"success\",\n          children: \"Profile Updated Successfully\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"name\",\n            value: name,\n            placeholder: \"Enter Name\",\n            onChange: event => setName(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Email Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            id: \"email\",\n            value: email,\n            placeholder: \"Enter Email\",\n            onChange: event => setEail(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"password\",\n            placeholder: \"Enter Password\",\n            onChange: event => setPassword(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"confrimpassword\",\n            children: \"Confirm Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"confirmpassword\",\n            id: \"confirmpassword\",\n            placeholder: \"Re-enter Password\",\n            onChange: event => setConfirmpassword(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"primary\",\n            type: \"submit\",\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(ProfileScreen, \"7fI7dKpSvDBZ8STXw+lWOSOOrQk=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = ProfileScreen;\nexport default ProfileScreen;\nvar _c;\n$RefreshReg$(_c, \"ProfileScreen\");","map":{"version":3,"names":["React","useState","useEffect","useDispatch","useSelector","LoadingBox","MessageBox","userSignIn","updateUserProfile","ProfileScreen","name","setName","email","setEail","password","setPassword","confirmpassword","setConfirmpassword","userInfo","updateLoading","updateSuccess","updateError","state","signin","console","log","dispatch","submitHandler","event","preventDefault","alert","id","target","value"],"sources":["C:/Users/abiod/Desktop/frontend/src/screens/ProfileScreen.js"],"sourcesContent":["import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport LoadingBox from \"../components/LoadingBox\";\r\nimport MessageBox from \"../components/MessageBox\";\r\n// import { profileReset, updateUserProfile } from \"../features/profileSlice\";\r\nimport { userSignIn, updateUserProfile } from \"../features/signinSlice\";\r\n\r\nconst ProfileScreen = () => {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmpassword, setConfirmpassword] = useState(\"\");\r\n\r\n  const { userInfo, updateLoading, updateSuccess, updateError } = useSelector(\r\n    (state) => state.signin\r\n  );\r\n\r\n  console.log(updateSuccess);\r\n  const dispatch = useDispatch();\r\n  // console.log(updatedProfile);\r\n  useEffect(() => {\r\n    setName(userInfo.name);\r\n    setEail(userInfo.email);\r\n    // if (success) {\r\n    //   dispatch(\r\n    //     userSignIn({\r\n    //       email: updatedProfile.email,\r\n    //       password: updatedProfile.password,\r\n    //     })\r\n    //   );\r\n    // dispatch(profileReset());\r\n    // }\r\n  }, [dispatch, userInfo, updateSuccess]);\r\n\r\n  //  dispatch(userSignIn())\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (password !== confirmpassword) {\r\n      alert(\"Password and Confirmed Password does not match\");\r\n    } else {\r\n      dispatch(updateUserProfile({ id: userInfo.id, name, email, password }));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form className=\"form\" onSubmit={submitHandler}>\r\n        <div>\r\n          <h1>User Profile</h1>\r\n        </div>\r\n        {updateLoading ? (\r\n          <LoadingBox></LoadingBox>\r\n        ) : updateError ? (\r\n          <MessageBox variant=\"danger\">{updateError}</MessageBox>\r\n        ) : (\r\n          <>\r\n            {updateSuccess && (\r\n              <MessageBox variant=\"success\">\r\n                Profile Updated Successfully\r\n              </MessageBox>\r\n            )}\r\n            <div>\r\n              <label htmlFor=\"name\">Name</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"name\"\r\n                value={name}\r\n                placeholder=\"Enter Name\"\r\n                onChange={(event) => setName(event.target.value)}\r\n              />\r\n            </div>\r\n\r\n            <div>\r\n              <label htmlFor=\"email\">Email Address</label>\r\n              <input\r\n                type=\"email\"\r\n                id=\"email\"\r\n                value={email}\r\n                placeholder=\"Enter Email\"\r\n                onChange={(event) => setEail(event.target.value)}\r\n              />\r\n            </div>\r\n\r\n            <div>\r\n              <label htmlFor=\"password\">Password</label>\r\n              <input\r\n                type=\"password\"\r\n                id=\"password\"\r\n                placeholder=\"Enter Password\"\r\n                onChange={(event) => setPassword(event.target.value)}\r\n              />\r\n            </div>\r\n\r\n            <div>\r\n              <label htmlFor=\"confrimpassword\">Confirm Password</label>\r\n              <input\r\n                type=\"confirmpassword\"\r\n                id=\"confirmpassword\"\r\n                placeholder=\"Re-enter Password\"\r\n                onChange={(event) => setConfirmpassword(event.target.value)}\r\n              />\r\n            </div>\r\n\r\n            <div>\r\n              <label />\r\n              <button className=\"primary\" type=\"submit\">\r\n                Update\r\n              </button>\r\n            </div>\r\n          </>\r\n        )}\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}