{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nconst paymentSlice = createSlice({\n  name: \"payment\",\n  initialState: {\n    paymentMethod: \"\"\n  },\n  reducers: {\n    savePaymentMethod: (state, _ref) => {\n      let {\n        payload\n      } = _ref;\n      state.paymentMethod = payload;\n    },\n    paymentReset: state => {\n      return state = {};\n    }\n  }\n});\nexport default paymentSlice.reducer;\nexport const {\n  savePaymentMethod,\n  paymentReset\n} = paymentSlice.actions;","map":{"version":3,"names":["createAsyncThunk","createSlice","axios","paymentSlice","name","initialState","paymentMethod","reducers","savePaymentMethod","state","payload","paymentReset","reducer","actions"],"sources":["C:/Users/abiod/Desktop/frontend/src/features/paymentSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\n\r\nconst paymentSlice = createSlice({\r\n  name: \"payment\",\r\n  initialState: {\r\n    paymentMethod: \"\",\r\n  },\r\n  reducers: {\r\n    savePaymentMethod: (state, { payload }) => {\r\n      state.paymentMethod = payload;\r\n    },\r\n    paymentReset: (state) => {\r\n      return (state = {});\r\n    },\r\n  },\r\n});\r\n\r\nexport default paymentSlice.reducer;\r\nexport const { savePaymentMethod, paymentReset } = paymentSlice.actions;\r\n"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;AAChE,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAGF,WAAW,CAAC;EAC/BG,IAAI,EAAE,SAAS;EACfC,YAAY,EAAE;IACZC,aAAa,EAAE;EACjB,CAAC;EACDC,QAAQ,EAAE;IACRC,iBAAiB,EAAE,CAACC,KAAK,WAAkB;MAAA,IAAhB;QAAEC;MAAQ,CAAC;MACpCD,KAAK,CAACH,aAAa,GAAGI,OAAO;IAC/B,CAAC;IACDC,YAAY,EAAGF,KAAK,IAAK;MACvB,OAAQA,KAAK,GAAG,CAAC,CAAC;IACpB;EACF;AACF,CAAC,CAAC;AAEF,eAAeN,YAAY,CAACS,OAAO;AACnC,OAAO,MAAM;EAAEJ,iBAAiB;EAAEG;AAAa,CAAC,GAAGR,YAAY,CAACU,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}