{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport Axios from \"axios\";\nexport const userRegister = createAsyncThunk(\"register/UserRegister\", async (_ref, _ref2) => {\n  let {\n    name,\n    email,\n    password\n  } = _ref;\n  let {\n    rejectWithValue\n  } = _ref2;\n  try {\n    const response = await Axios.post(\"http://localhost:5000/users/register\", {\n      name,\n      email,\n      password\n    });\n    return response.data;\n  } catch (error) {\n    console.log(rejectWithValue(error.response.data.message));\n  }\n});\nconst registerSlice = createSlice({\n  name: \"register\",\n  initialState: {\n    newuserLoading: false,\n    newuserInfo: {},\n    registerError: false,\n    errorMessage: \"\",\n    isRegistered: false\n  },\n  reducers: {\n    newuserSignout: state => {\n      state.newuserLoading = false;\n      state.newuserInfo = {};\n      state.isRegistered = false;\n    }\n  },\n  extraReducers(builder) {\n    builder.addCase(userRegister.pending, (state, action) => {\n      state.newuserLoading = true;\n    }).addCase(userRegister.fulfilled, (state, action) => {\n      state.newuserLoading = false;\n      state.newuserInfo = action.payload;\n      state.isRegistered = true;\n      state.registerError = false;\n      console.log(action.payload);\n    }).addCase(userRegister.rejected, (state, action) => {\n      state.newuserLoading = false;\n      state.newuserInfo = {};\n      state.isRegistered = false;\n      state.registerError = true;\n      state.errorMessage = action.payload;\n      console.log(action.payload);\n    });\n  }\n});\nexport default registerSlice.reducer;\nexport const {\n  newuserSignout\n} = registerSlice.actions;","map":{"version":3,"names":["createAsyncThunk","createSlice","Axios","userRegister","name","email","password","rejectWithValue","response","post","data","error","console","log","message","registerSlice","initialState","newuserLoading","newuserInfo","registerError","errorMessage","isRegistered","reducers","newuserSignout","state","extraReducers","builder","addCase","pending","action","fulfilled","payload","rejected","reducer","actions"],"sources":["C:/Users/abiod/Desktop/frontend/src/features/registerSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport Axios from \"axios\";\r\n\r\nexport const userRegister = createAsyncThunk(\r\n  \"register/UserRegister\",\r\n  async ({ name, email, password }, { rejectWithValue }) => {\r\n    try {\r\n      const response = await Axios.post(\r\n        \"http://localhost:5000/users/register\",\r\n        {\r\n          name,\r\n          email,\r\n          password,\r\n        }\r\n      );\r\n\r\n      return response.data;\r\n    } catch (error) {\r\n      console.log(rejectWithValue(error.response.data.message));\r\n    }\r\n  }\r\n);\r\n\r\nconst registerSlice = createSlice({\r\n  name: \"register\",\r\n  initialState: {\r\n    newuserLoading: false,\r\n    newuserInfo: {},\r\n    registerError: false,\r\n    errorMessage: \"\",\r\n    isRegistered: false,\r\n  },\r\n  reducers: {\r\n    newuserSignout: (state) => {\r\n      state.newuserLoading = false;\r\n      state.newuserInfo = {};\r\n      state.isRegistered = false;\r\n    },\r\n  },\r\n  extraReducers(builder) {\r\n    builder\r\n      .addCase(userRegister.pending, (state, action) => {\r\n        state.newuserLoading = true;\r\n      })\r\n      .addCase(userRegister.fulfilled, (state, action) => {\r\n        state.newuserLoading = false;\r\n        state.newuserInfo = action.payload;\r\n        state.isRegistered = true;\r\n        state.registerError = false;\r\n        console.log(action.payload);\r\n      })\r\n      .addCase(userRegister.rejected, (state, action) => {\r\n        state.newuserLoading = false;\r\n        state.newuserInfo = {};\r\n        state.isRegistered = false;\r\n        state.registerError = true;\r\n        state.errorMessage = action.payload;\r\n        console.log(action.payload);\r\n      });\r\n  },\r\n});\r\n\r\nexport default registerSlice.reducer;\r\nexport const { newuserSignout } = registerSlice.actions;\r\n"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;AAChE,OAAOC,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,YAAY,GAAGH,gBAAgB,CAC1C,uBAAuB,EACvB,uBAA0D;EAAA,IAAnD;IAAEI,IAAI;IAAEC,KAAK;IAAEC;EAAS,CAAC;EAAA,IAAE;IAAEC;EAAgB,CAAC;EACnD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACO,IAAI,CAC/B,sCAAsC,EACtC;MACEL,IAAI;MACJC,KAAK;MACLC;IACF,CAAC,CACF;IAED,OAAOE,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACC,GAAG,CAACN,eAAe,CAACI,KAAK,CAACH,QAAQ,CAACE,IAAI,CAACI,OAAO,CAAC,CAAC;EAC3D;AACF,CAAC,CACF;AAED,MAAMC,aAAa,GAAGd,WAAW,CAAC;EAChCG,IAAI,EAAE,UAAU;EAChBY,YAAY,EAAE;IACZC,cAAc,EAAE,KAAK;IACrBC,WAAW,EAAE,CAAC,CAAC;IACfC,aAAa,EAAE,KAAK;IACpBC,YAAY,EAAE,EAAE;IAChBC,YAAY,EAAE;EAChB,CAAC;EACDC,QAAQ,EAAE;IACRC,cAAc,EAAGC,KAAK,IAAK;MACzBA,KAAK,CAACP,cAAc,GAAG,KAAK;MAC5BO,KAAK,CAACN,WAAW,GAAG,CAAC,CAAC;MACtBM,KAAK,CAACH,YAAY,GAAG,KAAK;IAC5B;EACF,CAAC;EACDI,aAAa,CAACC,OAAO,EAAE;IACrBA,OAAO,CACJC,OAAO,CAACxB,YAAY,CAACyB,OAAO,EAAE,CAACJ,KAAK,EAAEK,MAAM,KAAK;MAChDL,KAAK,CAACP,cAAc,GAAG,IAAI;IAC7B,CAAC,CAAC,CACDU,OAAO,CAACxB,YAAY,CAAC2B,SAAS,EAAE,CAACN,KAAK,EAAEK,MAAM,KAAK;MAClDL,KAAK,CAACP,cAAc,GAAG,KAAK;MAC5BO,KAAK,CAACN,WAAW,GAAGW,MAAM,CAACE,OAAO;MAClCP,KAAK,CAACH,YAAY,GAAG,IAAI;MACzBG,KAAK,CAACL,aAAa,GAAG,KAAK;MAC3BP,OAAO,CAACC,GAAG,CAACgB,MAAM,CAACE,OAAO,CAAC;IAC7B,CAAC,CAAC,CACDJ,OAAO,CAACxB,YAAY,CAAC6B,QAAQ,EAAE,CAACR,KAAK,EAAEK,MAAM,KAAK;MACjDL,KAAK,CAACP,cAAc,GAAG,KAAK;MAC5BO,KAAK,CAACN,WAAW,GAAG,CAAC,CAAC;MACtBM,KAAK,CAACH,YAAY,GAAG,KAAK;MAC1BG,KAAK,CAACL,aAAa,GAAG,IAAI;MAC1BK,KAAK,CAACJ,YAAY,GAAGS,MAAM,CAACE,OAAO;MACnCnB,OAAO,CAACC,GAAG,CAACgB,MAAM,CAACE,OAAO,CAAC;IAC7B,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,eAAehB,aAAa,CAACkB,OAAO;AACpC,OAAO,MAAM;EAAEV;AAAe,CAAC,GAAGR,aAAa,CAACmB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}