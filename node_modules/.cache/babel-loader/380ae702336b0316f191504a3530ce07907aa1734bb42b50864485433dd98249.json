{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nconst initialState = {\n  productList: [],\n  isLoading: false,\n  error: false\n};\nexport const getProductList = createAsyncThunk(\"products/getProductList\", async () => {\n  try {\n    const response = await axios.get(\"http://localhost:5000/product\");\n    console.log(response);\n  } catch (error) {}\n}\n// () => {\n//   return fetch(\"http://localhost:5000/products\").then((response) =>\n//     response.json()\n//   );\n// }\n);\n\nconst productSlice = createSlice({\n  name: \"products\",\n  initialState,\n  //   reducers: {\n  //     productLists: (state) => {},\n  //   },\n  extraReducers: {\n    [getProductList.pending]: state => {\n      state.isLoading = true;\n    },\n    [getProductList.fulfilled]: (state, action) => {\n      state.isLoading = false;\n      state.productList = action.payload;\n    },\n    [getProductList.rejected]: state => {\n      state.isLoading = false;\n      state.error = true;\n    }\n  }\n});\nexport default productSlice.reducer;\n// export const { productLists } = productSlice.actions;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","initialState","productList","isLoading","error","getProductList","response","get","console","log","productSlice","name","extraReducers","pending","state","fulfilled","action","payload","rejected","reducer"],"sources":["C:/Users/abiod/Desktop/frontend/src/features/productSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\n\r\nconst initialState = {\r\n  productList: [],\r\n  isLoading: false,\r\n  error: false,\r\n};\r\n\r\nexport const getProductList = createAsyncThunk(\r\n  \"products/getProductList\",\r\n  async () => {\r\n    try {\r\n      const response = await axios.get(\"http://localhost:5000/product\");\r\n      console.log(response);\r\n    } catch (error) {}\r\n  }\r\n  // () => {\r\n  //   return fetch(\"http://localhost:5000/products\").then((response) =>\r\n  //     response.json()\r\n  //   );\r\n  // }\r\n);\r\n\r\nconst productSlice = createSlice({\r\n  name: \"products\",\r\n  initialState,\r\n  //   reducers: {\r\n  //     productLists: (state) => {},\r\n  //   },\r\n  extraReducers: {\r\n    [getProductList.pending]: (state) => {\r\n      state.isLoading = true;\r\n    },\r\n    [getProductList.fulfilled]: (state, action) => {\r\n      state.isLoading = false;\r\n      state.productList = action.payload;\r\n    },\r\n    [getProductList.rejected]: (state) => {\r\n      state.isLoading = false;\r\n      state.error = true;\r\n    },\r\n  },\r\n});\r\n\r\nexport default productSlice.reducer;\r\n// export const { productLists } = productSlice.actions;\r\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAG;EACnBC,WAAW,EAAE,EAAE;EACfC,SAAS,EAAE,KAAK;EAChBC,KAAK,EAAE;AACT,CAAC;AAED,OAAO,MAAMC,cAAc,GAAGN,gBAAgB,CAC5C,yBAAyB,EACzB,YAAY;EACV,IAAI;IACF,MAAMO,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAG,CAAC,+BAA+B,CAAC;IACjEC,OAAO,CAACC,GAAG,CAACH,QAAQ,CAAC;EACvB,CAAC,CAAC,OAAOF,KAAK,EAAE,CAAC;AACnB;AACA;AACA;AACA;AACA;AACA;AAAA,CACD;;AAED,MAAMM,YAAY,GAAGZ,WAAW,CAAC;EAC/Ba,IAAI,EAAE,UAAU;EAChBV,YAAY;EACZ;EACA;EACA;EACAW,aAAa,EAAE;IACb,CAACP,cAAc,CAACQ,OAAO,GAAIC,KAAK,IAAK;MACnCA,KAAK,CAACX,SAAS,GAAG,IAAI;IACxB,CAAC;IACD,CAACE,cAAc,CAACU,SAAS,GAAG,CAACD,KAAK,EAAEE,MAAM,KAAK;MAC7CF,KAAK,CAACX,SAAS,GAAG,KAAK;MACvBW,KAAK,CAACZ,WAAW,GAAGc,MAAM,CAACC,OAAO;IACpC,CAAC;IACD,CAACZ,cAAc,CAACa,QAAQ,GAAIJ,KAAK,IAAK;MACpCA,KAAK,CAACX,SAAS,GAAG,KAAK;MACvBW,KAAK,CAACV,KAAK,GAAG,IAAI;IACpB;EACF;AACF,CAAC,CAAC;AAEF,eAAeM,YAAY,CAACS,OAAO;AACnC"},"metadata":{},"sourceType":"module","externalDependencies":[]}