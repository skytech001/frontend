{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport Axios from \"axios\";\nexport const userSignIn = createAsyncThunk(\"signin/UserSignin\", async (_ref, _ref2) => {\n  let {\n    email,\n    password\n  } = _ref;\n  let {\n    rejectWithValue\n  } = _ref2;\n  try {\n    const response = await Axios.post(\"http://localhost:5000/users/signin\", {\n      email,\n      password\n    });\n    return response.data;\n  } catch (error) {\n    return rejectWithValue(error.response.data.message);\n  }\n});\nexport const updateUserProfile = createAsyncThunk(\"profile/updateUserProfile\", async (info, _ref3) => {\n  let {\n    rejectWithValue,\n    getState\n  } = _ref3;\n  const state = getState();\n  const userInfo = state.signin.userInfo;\n  try {\n    const response = await Axios.put(`http://localhost:5000/users/profile`, info, {\n      headers: {\n        authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    return rejectWithValue(`Email ${email} already exist. try signing in or use a diffrent email.`);\n  }\n});\nconst signinSlice = createSlice({\n  name: \"signin\",\n  initialState: {\n    userLoading: false,\n    userInfo: {},\n    signinError: false,\n    errorMessage: \"\",\n    isSignedIn: false,\n    updateLoading: false,\n    updateSuccess: false,\n    updateError: \"\"\n  },\n  reducers: {\n    userSignout: state => {\n      state.userLoading = false;\n      state.userInfo = {};\n      state.isSignedIn = false;\n      localStorage.removeItem(\"shippingAddress\");\n    },\n    profileReset: state => {\n      state.updateSuccess = false;\n      state.updateError = \"\";\n      state.updateLoading = false;\n    }\n  },\n  extraReducers(builder) {\n    builder.addCase(userSignIn.pending, (state, action) => {\n      state.userLoading = true;\n    }).addCase(userSignIn.fulfilled, (state, action) => {\n      state.userLoading = false;\n      state.userInfo = action.payload;\n      state.isSignedIn = true;\n      state.signinError = false;\n      localStorage.setItem(\"userInfo\", JSON.stringify(action.payload));\n    }).addCase(userSignIn.rejected, (state, action) => {\n      state.userLoading = false;\n      state.userInfo = {};\n      state.isSignedIn = false;\n      state.signinError = true;\n      state.errorMessage = action.payload;\n    }).addCase(updateUserProfile.pending, state => {\n      state.updateLoading = true;\n    }).addCase(updateUserProfile.fulfilled, (state, action) => {\n      state.updateLoading = false;\n      state.updateSuccess = true;\n      state.userInfo = action.payload;\n    }).addCase(updateUserProfile.rejected, (state, action) => {\n      state.updateLoading = false;\n      state.updateError = action.payload;\n    });\n  }\n});\nexport default signinSlice.reducer;\nexport const {\n  userSignout,\n  profileReset\n} = signinSlice.actions;","map":{"version":3,"names":["createAsyncThunk","createSlice","Axios","userSignIn","email","password","rejectWithValue","response","post","data","error","message","updateUserProfile","info","getState","state","userInfo","signin","put","headers","authorization","token","signinSlice","name","initialState","userLoading","signinError","errorMessage","isSignedIn","updateLoading","updateSuccess","updateError","reducers","userSignout","localStorage","removeItem","profileReset","extraReducers","builder","addCase","pending","action","fulfilled","payload","setItem","JSON","stringify","rejected","reducer","actions"],"sources":["C:/Users/abiod/Desktop/frontend/src/features/signinSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport Axios from \"axios\";\r\n\r\nexport const userSignIn = createAsyncThunk(\r\n  \"signin/UserSignin\",\r\n  async ({ email, password }, { rejectWithValue }) => {\r\n    try {\r\n      const response = await Axios.post(\"http://localhost:5000/users/signin\", {\r\n        email,\r\n        password,\r\n      });\r\n\r\n      return response.data;\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data.message);\r\n    }\r\n  }\r\n);\r\n\r\nexport const updateUserProfile = createAsyncThunk(\r\n  \"profile/updateUserProfile\",\r\n  async (info, { rejectWithValue, getState }) => {\r\n    const state = getState();\r\n    const userInfo = state.signin.userInfo;\r\n\r\n    try {\r\n      const response = await Axios.put(\r\n        `http://localhost:5000/users/profile`,\r\n        info,\r\n        {\r\n          headers: { authorization: `Bearer ${userInfo.token}` },\r\n        }\r\n      );\r\n      return response.data;\r\n    } catch (error) {\r\n      return rejectWithValue(\r\n        `Email ${email} already exist. try signing in or use a diffrent email.`\r\n      );\r\n    }\r\n  }\r\n);\r\n\r\nconst signinSlice = createSlice({\r\n  name: \"signin\",\r\n  initialState: {\r\n    userLoading: false,\r\n    userInfo: {},\r\n    signinError: false,\r\n    errorMessage: \"\",\r\n    isSignedIn: false,\r\n    updateLoading: false,\r\n    updateSuccess: false,\r\n    updateError: \"\",\r\n  },\r\n  reducers: {\r\n    userSignout: (state) => {\r\n      state.userLoading = false;\r\n      state.userInfo = {};\r\n      state.isSignedIn = false;\r\n      localStorage.removeItem(\"shippingAddress\");\r\n    },\r\n    profileReset: (state) => {\r\n      state.updateSuccess = false;\r\n      state.updateError = \"\";\r\n      state.updateLoading = false;\r\n    },\r\n  },\r\n  extraReducers(builder) {\r\n    builder\r\n      .addCase(userSignIn.pending, (state, action) => {\r\n        state.userLoading = true;\r\n      })\r\n      .addCase(userSignIn.fulfilled, (state, action) => {\r\n        state.userLoading = false;\r\n        state.userInfo = action.payload;\r\n        state.isSignedIn = true;\r\n        state.signinError = false;\r\n\r\n        localStorage.setItem(\"userInfo\", JSON.stringify(action.payload));\r\n      })\r\n      .addCase(userSignIn.rejected, (state, action) => {\r\n        state.userLoading = false;\r\n        state.userInfo = {};\r\n        state.isSignedIn = false;\r\n        state.signinError = true;\r\n        state.errorMessage = action.payload;\r\n      })\r\n      .addCase(updateUserProfile.pending, (state) => {\r\n        state.updateLoading = true;\r\n      })\r\n      .addCase(updateUserProfile.fulfilled, (state, action) => {\r\n        state.updateLoading = false;\r\n        state.updateSuccess = true;\r\n        state.userInfo = action.payload;\r\n      })\r\n      .addCase(updateUserProfile.rejected, (state, action) => {\r\n        state.updateLoading = false;\r\n        state.updateError = action.payload;\r\n      });\r\n  },\r\n});\r\n\r\nexport default signinSlice.reducer;\r\nexport const { userSignout, profileReset } = signinSlice.actions;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}