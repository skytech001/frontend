{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nconst addItemToCart = createAsyncThunk(\"addToCart/addItemToCart\", async id => {\n  try {\n    const response = await axios.post(\"http://localhost:5000/products/:id\", {\n      id\n    });\n    return {\n      name: response.data.name,\n      image: response.data.image,\n      price: response.data.price,\n      countInStock: response.data.countInStock,\n      product: response.data.id,\n      qty\n    };\n  } catch (error) {}\n});\nconst addToCartSlice = createSlice({\n  name: \"addToCart\",\n  initialState: {\n    cartItems: []\n  },\n  extraReducers(builder) {\n    builder.addCase(addItemToCart.fulfilled, (state, action) => {\n      state.cartItems = action.payload;\n      console.log(action.payload);\n    });\n  }\n});\nexport default addToCartSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","axios","addItemToCart","id","response","post","name","data","image","price","countInStock","product","qty","error","addToCartSlice","initialState","cartItems","extraReducers","builder","addCase","fulfilled","state","action","payload","console","log","reducer"],"sources":["C:/Users/abiod/Desktop/frontend/src/features/addToCartSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\n\r\nimport axios from \"axios\";\r\n\r\nconst addItemToCart = createAsyncThunk(\r\n  \"addToCart/addItemToCart\",\r\n  async (id) => {\r\n    try {\r\n      const response = await axios.post(\"http://localhost:5000/products/:id\", {\r\n        id,\r\n      });\r\n      return {\r\n        name: response.data.name,\r\n        image: response.data.image,\r\n        price: response.data.price,\r\n        countInStock: response.data.countInStock,\r\n        product: response.data.id,\r\n        qty,\r\n      };\r\n    } catch (error) {}\r\n  }\r\n);\r\nconst addToCartSlice = createSlice({\r\n  name: \"addToCart\",\r\n  initialState: {\r\n    cartItems: [],\r\n  },\r\n  extraReducers(builder) {\r\n    builder.addCase(addItemToCart.fulfilled, (state, action) => {\r\n      state.cartItems = action.payload;\r\n      console.log(action.payload);\r\n    });\r\n  },\r\n});\r\n\r\nexport default addToCartSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;AAEhE,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,aAAa,GAAGH,gBAAgB,CACpC,yBAAyB,EACzB,MAAOI,EAAE,IAAK;EACZ,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,IAAI,CAAC,oCAAoC,EAAE;MACtEF;IACF,CAAC,CAAC;IACF,OAAO;MACLG,IAAI,EAAEF,QAAQ,CAACG,IAAI,CAACD,IAAI;MACxBE,KAAK,EAAEJ,QAAQ,CAACG,IAAI,CAACC,KAAK;MAC1BC,KAAK,EAAEL,QAAQ,CAACG,IAAI,CAACE,KAAK;MAC1BC,YAAY,EAAEN,QAAQ,CAACG,IAAI,CAACG,YAAY;MACxCC,OAAO,EAAEP,QAAQ,CAACG,IAAI,CAACJ,EAAE;MACzBS;IACF,CAAC;EACH,CAAC,CAAC,OAAOC,KAAK,EAAE,CAAC;AACnB,CAAC,CACF;AACD,MAAMC,cAAc,GAAGd,WAAW,CAAC;EACjCM,IAAI,EAAE,WAAW;EACjBS,YAAY,EAAE;IACZC,SAAS,EAAE;EACb,CAAC;EACDC,aAAa,CAACC,OAAO,EAAE;IACrBA,OAAO,CAACC,OAAO,CAACjB,aAAa,CAACkB,SAAS,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC1DD,KAAK,CAACL,SAAS,GAAGM,MAAM,CAACC,OAAO;MAChCC,OAAO,CAACC,GAAG,CAACH,MAAM,CAACC,OAAO,CAAC;IAC7B,CAAC,CAAC;EACJ;AACF,CAAC,CAAC;AAEF,eAAeT,cAAc,CAACY,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}