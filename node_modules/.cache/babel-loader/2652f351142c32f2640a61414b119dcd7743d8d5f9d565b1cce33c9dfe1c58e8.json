{"ast":null,"code":"// import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\n// import axios from \"axios\";\n// import express from \"express\";\n\n// const UserSignIn = createAsyncThunk(\n//   \"signin/UserSignin\",\n//   async ({ email, password }) => {\n//     try {\n//       const response = await axios.post(\"/users/signin\", { email, password });\n//       return response.data;\n//     } catch (error) {\n//       return error.data;\n//     }\n//   }\n// );\n\n// const signinSlice = createSlice({\n//   name: \"signin\",\n//   initialState: {},\n//   reducers: {},\n//   extraReducers(builder) {\n//     builder\n//       .addCase(UserSignIn.pending, (state, action) => {\n//         state.loading = true;\n//       })\n//       .addCase(UserSignIn.fulfilled, () => {})\n//       .addCase(UserSignIn.rejected, () => {});\n//   },\n// });\n\n// export default signinSlice.reducer;","map":{"version":3,"names":[],"sources":["C:/Users/abiod/Desktop/frontend/src/features/signinSlice.js"],"sourcesContent":["// import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\n// import axios from \"axios\";\r\n// import express from \"express\";\r\n\r\n// const UserSignIn = createAsyncThunk(\r\n//   \"signin/UserSignin\",\r\n//   async ({ email, password }) => {\r\n//     try {\r\n//       const response = await axios.post(\"/users/signin\", { email, password });\r\n//       return response.data;\r\n//     } catch (error) {\r\n//       return error.data;\r\n//     }\r\n//   }\r\n// );\r\n\r\n// const signinSlice = createSlice({\r\n//   name: \"signin\",\r\n//   initialState: {},\r\n//   reducers: {},\r\n//   extraReducers(builder) {\r\n//     builder\r\n//       .addCase(UserSignIn.pending, (state, action) => {\r\n//         state.loading = true;\r\n//       })\r\n//       .addCase(UserSignIn.fulfilled, () => {})\r\n//       .addCase(UserSignIn.rejected, () => {});\r\n//   },\r\n// });\r\n\r\n// export default signinSlice.reducer;\r\n"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}